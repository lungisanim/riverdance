{"version":3,"sources":["views/LoginPage.js","components/TermsCard.js","views/TermsPage.js","views/UserInfoPage.tsx","app.js","index.js"],"names":["LoginPage","_ref","onSuccess","onError","text","setText","useState","fullText","useEffect","index","timer","setInterval","length","prev","clearInterval","React","createElement","className","GoogleLogin","TermsCard","onAccept","onReject","onClick","TermsPage","UserInfoPage","userInfo","questions","setQuestions","currentStep","setCurrentStep","answers","setAnswers","loading","setLoading","console","log","username","handleAnswerChange","questionId","answer","file","prevAnswers","existingAnswerIndex","findIndex","a","updatedAnswers","currentQuestion","onSubmit","async","e","preventDefault","formData","FormData","append","forEach","concat","axios","post","headers","alert","error","onChange","id","target","value","required","type","_e$target$files","files","_answers$find","find","App","page","setPage","setUserInfo","responseMessage","response","responseDetails","jwtDecode","credential","userDetails","name","email","givenName","familyName","picture","emailVerified","domain","hd","errorMessage","acceptTerms","rejectTerms","googleLogout","renderPage","ReactDOM","createRoot","document","getElementById","render","GoogleOAuthProvider","clientId","StrictMode"],"mappings":"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","file":"static/js/main.7cd5995f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\nfunction LoginPage({ onSuccess, onError }) {\r\n    const [text, setText] = useState('');\r\n    const fullText = '.... create the things you want to see ...';\r\n\r\n    useEffect(() => {\r\n        let index = 0;\r\n        const timer = setInterval(() => {\r\n            if (index < fullText.length - 1) {\r\n                setText((prev) => prev + fullText[index]);\r\n                index++;\r\n            } else {\r\n                clearInterval(timer);\r\n            }\r\n        }, 100); \r\n\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"app-login\">\r\n            <h2>{text}</h2>\r\n            <GoogleLogin onSuccess={onSuccess} onError={onError} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport './terms.css';\r\n\r\nfunction TermsCard({ onAccept, onReject }) {\r\n    return (\r\n        <div className=\"terms-card-container\">\r\n            <div className=\"card terms-card\">\r\n                <div className=\"card-body\">\r\n                    <h2>Terms and Conditions</h2>\r\n                    <p>Please read and accept our terms and conditions for Forest.</p>\r\n                    <p>1. Acceptance of Terms: By accessing or using Forest service, you agree to be bound by these Terms and Conditions.</p>\r\n                    <p>2. User Responsibilities: You are responsible for maintaining the confidentiality of your account and password.</p>\r\n                    <p>3. Intellectual Property: All content on Forest is protected by copyright and other intellectual property laws.</p>\r\n                    <p>4. User-Generated Content: By submitting content to Forest, you grant us a non-exclusive, royalty-free license to use, modify, and distribute your content.</p>\r\n                    <p>5. Prohibited Activities: Users may not engage in any illegal activities or violate any laws while using Forest.</p>\r\n                    <p>6. Disclaimer of Warranties: Forest is provided \"as is\" without any warranties, express or implied.</p>\r\n                    <p>7. Limitation of Liability: Forest shall not be liable for any indirect, incidental, special, consequential, or punitive damages.</p>\r\n                    <p>8. Governing Law: These terms shall be governed by and construed in accordance with the laws of [Your Jurisdiction].</p>\r\n                    <p>9. Termination: We reserve the right to terminate or suspend your account and access to Forest at our sole discretion.</p>\r\n                    <p>10. Changes to Service: We reserve the right to withdraw or amend Forest service, and any service or material we provide, in our sole discretion without notice. We will not be liable if for any reason all or any part of the service is unavailable at any time or for any period.</p>\r\n                </div>\r\n                <div className=\"card-footer right-alignned-footer\">\r\n                    <button className=\"btn btn-primary\" onClick={onAccept}>Accept</button>\r\n                    <button className=\"btn btn-secondary\" onClick={onReject}>Reject</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TermsCard;\r\n","import React from 'react';\r\nimport TermsCard from '../components/TermsCard';\r\n\r\nfunction TermsPage({ onAccept, onReject }) {\r\n    return (\r\n        <div className=\"app-terms\">\r\n            <TermsCard onAccept={onAccept} onReject={onReject} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TermsPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface Question {\r\n  id: number;\r\n  text: string;\r\n}\r\n\r\ninterface FormAnswer {\r\n  questionId: number;\r\n  answer: string;\r\n  file?: File;\r\n}\r\n\r\nconst UserInfoPage: React.FC<{ userInfo: { username: string } }> = ({ userInfo }) => {\r\n  const [questions, setQuestions] = useState<Question[]>([]);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [answers, setAnswers] = useState<FormAnswer[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  \r\n  useEffect(() => {\r\n    \r\n    const fetchQuestions = async () => {\r\n      try {\r\n        // Replace with your actual API endpoint\r\n        const response = await axios.get('/api/questions');\r\n        setQuestions(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Failed to fetch questions', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    console.log(userInfo.username);\r\n    //fetchQuestions();\r\n  }, []);\r\n\r\n  const handleAnswerChange = (questionId: number, answer: string, file?: File) => {\r\n    setAnswers(prevAnswers => {\r\n      const existingAnswerIndex = prevAnswers.findIndex(a => a.questionId === questionId);\r\n      \r\n      if (existingAnswerIndex > -1) {\r\n        const updatedAnswers = [...prevAnswers];\r\n        updatedAnswers[existingAnswerIndex] = { questionId, answer, file };\r\n        return updatedAnswers;\r\n      }\r\n\r\n      return [...prevAnswers, { questionId, answer, file }];\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const formData = new FormData();\r\n    formData.append('username', userInfo.username);\r\n    \r\n    answers.forEach(answer => {\r\n      formData.append(`answers[${answer.questionId}][text]`, answer.answer);\r\n      if (answer.file) {\r\n        formData.append(`answers[${answer.questionId}][file]`, answer.file);\r\n      }\r\n    });\r\n\r\n    try {\r\n      await axios.post('/api/submit-application', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n      alert('Application submitted successfully!');\r\n    } catch (error) {\r\n      console.error('Submission failed', error);\r\n      alert('Failed to submit application');\r\n    }\r\n  };\r\n\r\n  const currentQuestion = questions[currentStep];\r\n\r\n  return (\r\n    <div className=\"user-info-page\">\r\n      <h2>Job Application</h2>\r\n      {loading ? (\r\n        <p>Loading questions...</p>\r\n      ) : (\r\n        currentQuestion ? (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"question-container\">\r\n              <label>{currentQuestion.text}</label>\r\n              <textarea \r\n                onChange={(e) => handleAnswerChange(currentQuestion.id, e.target.value)}\r\n                required\r\n              />\r\n              <input \r\n                type=\"file\" \r\n                onChange={(e) => {\r\n                  const file = e.target.files?.[0];\r\n                  if (file) {\r\n                    handleAnswerChange(currentQuestion.id, answers.find(a => a.questionId === currentQuestion.id)?.answer || '', file);\r\n                  }\r\n                }} \r\n              />\r\n            </div>\r\n            \r\n            <div className=\"navigation-buttons\">\r\n              {currentStep > 0 && (\r\n                <button \r\n                  type=\"button\" \r\n                  onClick={() => setCurrentStep(prev => prev - 1)}\r\n                >\r\n                  Previous\r\n                </button>\r\n              )}\r\n              \r\n              {currentStep < questions.length - 1 ? (\r\n                <button \r\n                  type=\"button\" \r\n                  onClick={() => setCurrentStep(prev => prev + 1)}\r\n                >\r\n                  Next\r\n                </button>\r\n              ) : (\r\n                <button type=\"submit\">Submit Application</button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        ) : (\r\n          <p>No questions available.</p>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfoPage;","import React, { useState } from 'react';\r\nimport { googleLogout } from '@react-oauth/google';\r\nimport './app.css';\r\nimport LoginPage from './views/LoginPage';\r\nimport TermsPage from './views/TermsPage';\r\nimport UserInfoPage from './views/UserInfoPage';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction App() {\r\n    const [page, setPage] = useState('login');\r\n    const [userInfo, setUserInfo] = useState(null);\r\n\r\n    const responseMessage = (response) => {\r\n        // Decode the credential to extract user information\r\n        const responseDetails = jwtDecode(response.credential);\r\n        try {\r\n            // The credential is already a decoded JWT in this case\r\n            const userDetails = {\r\n                name: responseDetails.name,\r\n                email: responseDetails.email,\r\n                givenName: responseDetails.givenName,\r\n                familyName: responseDetails.familyName,\r\n                picture: responseDetails.picture,\r\n                emailVerified: responseDetails.emailVerified,\r\n                domain: responseDetails.hd // If it's a Google Workspace account\r\n            };\r\n\r\n            console.log('User Details:', userDetails);\r\n            setUserInfo(userDetails);\r\n            setPage('terms');\r\n        } catch (error) {\r\n            console.error('Error processing user information:', error);\r\n        }\r\n    };\r\n\r\n    const errorMessage = (error) => {\r\n        console.log(error);\r\n    };\r\n\r\n    const acceptTerms = () => {\r\n        setPage('userInfo');\r\n    };\r\n\r\n    const rejectTerms = () => {\r\n        googleLogout();\r\n        setUserInfo(null);\r\n        setPage('login');\r\n    };\r\n\r\n    const renderPage = () => {\r\n        switch(page) {\r\n            case 'login':\r\n                return <LoginPage onSuccess={responseMessage} onError={errorMessage} />;\r\n            case 'terms':\r\n                return <TermsPage onAccept={acceptTerms} onReject={rejectTerms} />;\r\n            case 'userInfo':\r\n                return <UserInfoPage userInfo={userInfo} />;\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            {renderPage()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { GoogleOAuthProvider } from '@react-oauth/google'; \r\nimport App from './app';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <GoogleOAuthProvider clientId=\"872731942146-p8188354vq1i19uaevo1g46dt6i4l79p.apps.googleusercontent.com\">\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </GoogleOAuthProvider>\r\n);"],"sourceRoot":""}